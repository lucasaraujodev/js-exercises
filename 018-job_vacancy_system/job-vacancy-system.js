// ----- EXPLANATION OF THE EXERCISE -----

/*

üá∫üá∏: Write a JavaScript program that simulates a job vacancy system, where it is possible to manage vacancies and add candidates to vacancies.

It must meet the following requirements:

     -Have a menu where you can choose between the different features of the system:
         1. List available vacancies
         2. Create a new vacancy
         3. View a vacancy
         4. Register a candidate for a vacancy
         5. Delete a vacancy
         6. Exit

     -The option to list vacancies must show the index, name and number of candidates registered for all vacancies.

     -The option to create a new vacancy must ask for a name for the vacancy, a description and a deadline, and must also ask the user to confirm the information before saving it.

     -The option to view a vacancy must ask for the vacancy index and show all its information: index, name, description, deadline, number of candidates and the names of the candidates.

     -The option to register a candidate for a vacancy asks for the candidate's name, the vacancy index and then a confirmation displaying the vacancy information before saving the candidate to the vacancy.

     -The option to delete a vacancy must ask for the vacancy index, show its information and ask the user to confirm the deletion of the vacancy before actually deleting it.

     This is the module review exercise, so take the opportunity to use all the resources seen so far whenever possible, such as objects, arrays and functions.

üáßüá∑: Escreva um programa em javascript que simule um sistema de vagas de emprego, onde √© poss√≠vel gerenciar as vagas e adicionar candidatos √†s vagas. 

Ele deve atender aos seguintes requisitos:

    -Ter um um menu onde √© poss√≠vel escolher entre as diferentes funcionalidades do sistema:

        1. Listar vagas dispon√≠veis
        2. Criar um nova vaga
        3. Visualizar uma vaga
        4. Inscrever um candidato em uma vaga
        5. Excluir uma vaga
        6. Sair

    -A op√ß√£o de listar as vagas deve mostrar o √≠ndice, o nome e a quantidade de candidatos inscritos de todas as vagas.

    -A op√ß√£o de criar uma nova vaga deve pedir um nome para a vaga, uma descri√ß√£o e uma data limite, e tamb√©m deve pedir que o usu√°rio confirme as informa√ß√µes antes de salv√°-las.

    -A op√ß√£o de visualizar uma vaga deve pedir o √≠ndice da vaga e mostrar todas as informa√ß√µes dela: √≠ndice, nome, descri√ß√£o, data limite, quantidade de candidatos e o nome dos candidatos.

    -A op√ß√£o de inscrever um candidato em uma vaga de pedir o nome do candidato, o √≠ndice da vaga e ent√£o uma confirma√ß√£o exibindo as informa√ß√µes da vaga antes de salvar o candidato na vaga.

    -A op√ß√£o de excluir uma vaga deve pedir o √≠ndice da vaga, mostrar suas informa√ß√µes e pedir que o usu√°rio confirme a exclus√£o da vaga antes de realmente exclui-la.

    Este √© o exerc√≠cio de revis√£o do m√≥dulo, ent√£o aproveite para utilizar todos os recursos vistos at√© agora sempre que poss√≠vel, como os objetos, arrays e fun√ß√µes.
*/

const vagas = []

function listarVagas() {
    const vagasEmTexto = vagas.reduce((textoFinal, vaga, indice) => {
        textoFinal += indice + ". "
        textoFinal += vaga.nome
        textoFinal += " (" + vaga.candidatos.length + " candidatos)\n"
        return textoFinal
      }, "")
    
      alert(vagasEmTexto)
}

function novaVaga() {
  const nome = prompt("Informe um nome para a vaga:")
  const descricao = prompt("Informe um descri√ß√£o para a vaga:")
  const dataLimite = prompt("Informe um data limite (dd/mm/aaaa) para a vaga:")

  const confirmacao = confirm(
    "Deseja criar uma nova vaga com essas informa√ß√µes?\n" +
    "Nome: " + nome + "\nDescri√ß√£o: " + descricao + "\nData limite: " + dataLimite
  )

  if (confirmacao) {
    const novaVaga = { nome, descricao, dataLimite, candidatos: [] }
    vagas.push(novaVaga)
    alert("Vaga criada.")
  }
}

function exibirVaga() {
    const indice = prompt("Informe o √≠ndice da vaga que deseja exibir:")

    if (indice >= vagas.length || indice < 0) {
        alert("√çndice inv√°lido")
        return
    }

    const vaga = vagas[indice]
  
    const candidatosEmTexto = vaga.candidatos.reduce((textoFinal, candidato) => textoFinal + "\n - " + candidato, "")
  
    alert(
      "Vaga n¬∫ " + indice +
      "\nNome: " + vaga.nome +
      "\nDescri√ß√£o: " + vaga.descricao +
      "\nData limite: " + vaga.dataLimite +
      "\nQuantidade de candidatos: " + vaga.candidatos.length +
      "\nCandidatos inscritos:" + candidatosEmTexto
    )
  }

  function inscreverCandidato() {
    const candidato = prompt("Informe o nome do(a) candidato(a):")
    const indice = prompt("Informe o √≠ndice da vaga para a qual o(a) candidato(a) deseja se inscrever:")
    const vaga = vagas[indice]
  
    const confirmacao = confirm(
      "Deseja inscrever o candidato " + candidato + " na vaga " + indice + "?\n" +
      "Nome: " + vaga.nome + "\nDescri√ß√£o: " + vaga.descricao + "\nData limite: " + vaga.dataLimite
    )
  
    if (confirmacao) {
      vaga.candidatos.push(candidato)
      alert("Inscri√ß√£o realizada")
    }
  }

  function excluirVaga() {
    const indice = prompt("Informe o √≠ndice da vaga que deseja excluir:")
    const vaga = vagas[indice]
  
    const confirmacao = confirm(
      "Tem certeza que deseja excluir a vaga " + indice + "?\n" +
      "Nome: " + vaga.nome + "\nDescri√ß√£o: " + vaga.descricao + "\nData limite: " + vaga.dataLimite
    )
  
    if (confirmacao) {
      vagas.splice(indice, 1)
      alert("Vaga exclu√≠da.")
    }
  }

function exibirMenu() {
  const opcao = prompt(
    "Cadastro de Vagas de Emprego" +
    "\n\nEscolha uma das op√ß√µes" +
    "\n1. Listar vagas dispon√≠veis" +
    "\n2. Criar uma nova vaga" +
    "\n3. Visualizar uma vaga" +
    "\n4. Inscrever um(a) candidato(a)" +
    "\n5. Excluir uma vaga" +
    "\n6. Sair"
  )
  return opcao
}

function executar() {
    let opcao = ""
  
    do {
      opcao = exibirMenu()
  
      switch (opcao) {
        case "1":
          listarVagas()
          break
        case "2":
          novaVaga()
          break
        case "3":
          exibirVaga()
          break
        case "4":
          inscreverCandidato()
          break
        case "5":
          excluirVaga()
        case "6":
          alert("Saindo...")
          break
        default:
          alert("Op√ß√£o inv√°lida.")
      }
  
    } while (opcao !== "6");
  }
  
  executar()